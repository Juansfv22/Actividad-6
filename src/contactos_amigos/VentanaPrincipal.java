package contactos_amigos;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.lang.NumberFormatException;
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnRead = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        txtMensaje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONTACTOS");

        jLabel1.setText("Nombre");

        jLabel2.setText("Número");

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnRead.setText("Read");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnCreate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnRead)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(txtNumero)))
                            .addComponent(txtMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(txtMensaje)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnDelete)
                    .addComponent(btnRead)
                    .addComponent(btnUpdate))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
      // Este botón agrega un contacto dado un nombre y un número, o aclara si este ya existe.
      try{
        String newName = txtNombre.getText().strip();
        long newNumber = Long.parseLong(txtNumero.getText().strip());
        String contacto; String name; long number;
        File file = new File("C:\\Users\\JUANSE\\OneDrive\\Documentos\\Universidad\\Semestre 5\\POO\\Actividad 6\\friendsContacts.txt");
        if (!file.exists()){
            file.createNewFile();
        }
        RandomAccessFile raf = new RandomAccessFile(file, "rw");
            boolean found = false;
            while (raf.getFilePointer() < raf.length()) {
                contacto = raf.readLine();
                String[] lineSplit = contacto.split("=");
                name = lineSplit[0];
                number = Long.parseLong(lineSplit[1]);
                if (name.toLowerCase().equals(newName.toLowerCase()) || number == newNumber) {
                    found = true;
                    break;
                }
            }
            if (found == false) {
                contacto = newName + "=" + String.valueOf(newNumber);
                raf.writeBytes(contacto);
                raf.writeBytes(System.lineSeparator());
                txtMensaje.setText("Contacto agregado");
                raf.close();
            }
            else {
                raf.close();
                txtMensaje.setText("Este nombre y/o numero ya existe");
            }
      }
      catch (IOException ioe) {
          txtMensaje.setText("Problemas con el archivo indicado");
          System.out.println(ioe);
        }
      catch (NumberFormatException nef) {
          txtMensaje.setText("Formato de nombre y/o número inválido");
          System.out.println(nef);
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // Este botón elimina un contacto dado el nombre de este, o indica si este aún no existe.
        try{
            String newName = txtNombre.getText().strip();
            String contacto; String name; int index;
            File file = new File("C:\\Users\\JUANSE\\OneDrive\\Documentos\\Universidad\\Semestre 5\\POO\\Actividad 6\\friendsContacts.txt");
            if (!file.exists()) {
                file.createNewFile();
            }
            RandomAccessFile raf = new RandomAccessFile(file, "rw");
            boolean found = false;
            while (raf.getFilePointer() < raf.length()) {
                contacto = raf.readLine();
                String[] lineSplit = contacto.split("=");
                name = lineSplit[0];
                if (name.toLowerCase().equals(newName.toLowerCase())) {
                    found = true;
                    break;
                }
            }
            if (found == true) {
                File tmpFile = new File("temp.txt");
                RandomAccessFile tmpraf = new RandomAccessFile(tmpFile, "rw");
                raf.seek(0);
                while (raf.getFilePointer() < raf.length()) {
                    contacto = raf.readLine();
                    index = contacto.indexOf('=');
                    name = contacto.substring(0, index);
                    if (name.toLowerCase().equals(newName.toLowerCase())) {
                        continue;
                    }
                    tmpraf.writeBytes(contacto);
                    tmpraf.writeBytes(System.lineSeparator());
                }
                raf.seek(0);
                tmpraf.seek(0);
                while (tmpraf.getFilePointer() < tmpraf.length()) {
                    raf.writeBytes(tmpraf.readLine());
                    raf.writeBytes(System.lineSeparator());
                }
                raf.setLength(tmpraf.length());
                tmpraf.close();
                raf.close();
                tmpFile.delete();
                txtMensaje.setText("Contacto eliminado");
            }
            else {
                if (newName.isBlank()){
                    raf.close();
                    txtMensaje.setText("Ingrese el nombre del contacto, no el número");
                }
                else{
                    raf.close();
                    txtMensaje.setText("Este contacto no existe");
                }
            }
        }
        catch (IOException ioe) {
            txtMensaje.setText("Problemas con el archivo indicado");
            System.out.println(ioe);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        // Este botón muestra el número si se da el nombre del contacto, o muestra el nombre si se da el número del contacto.
        try{
          if (txtNombre.getText().isBlank()){
            Long newNumber = Long.parseLong(txtNumero.getText().strip());
            String contacto; String name; long number;
            File file = new File("C:\\Users\\JUANSE\\OneDrive\\Documentos\\Universidad\\Semestre 5\\POO\\Actividad 6\\friendsContacts.txt");
            if (!file.exists()) {
                file.createNewFile();
            }
            RandomAccessFile raf = new RandomAccessFile(file, "rw");
            boolean found = false;
            while (raf.getFilePointer() < raf.length()) {
                contacto = raf.readLine();
                String[] lineSplit = contacto.split("=");
                name = lineSplit[0];
                number = Long.parseLong(lineSplit[1]);
                if (number == newNumber) {
                    found = true;
                    txtNombre.setText(name);
                    txtMensaje.setText("El número "+number+" es de "+name);
                    raf.close();
                    break;
                }
            }
            if (found == false) {
                raf.close();
                txtMensaje.setText("No existe un contacto con este número");
            }
          }
          else{
            String newName = txtNombre.getText().strip();
            String contacto; String name; String number;
            File file = new File("C:\\Users\\JUANSE\\OneDrive\\Documentos\\Universidad\\Semestre 5\\POO\\Actividad 6\\friendsContacts.txt");
            if (!file.exists()) {
                file.createNewFile();
            }
            RandomAccessFile raf = new RandomAccessFile(file, "rw");
            boolean found = false;
            while (raf.getFilePointer() < raf.length()) {
                contacto = raf.readLine();
                String[] lineSplit = contacto.split("=");
                name = lineSplit[0];
                number = lineSplit[1];
                if (name.toLowerCase().equals(newName.toLowerCase())) {
                    found = true;
                    txtNumero.setText(number);
                    txtMensaje.setText("El número de "+name+" es "+number);
                    raf.close();
                    break;
                }
            }
            if (found == false) {
                raf.close();
                txtMensaje.setText("No existe un contacto con este nombre");
            }
          }
        }
        catch (IOException ioe){
            txtMensaje.setText("Problemas con el archivo indicado");
            System.out.println(ioe);
        }
        catch (NumberFormatException nef){
            txtMensaje.setText("Formato de nombre y/o número inválido");
            System.out.println(nef);
        }
    }//GEN-LAST:event_btnReadActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel txtMensaje;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
